# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv3 object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/yolov3

# Parameters
nc: &nc 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

#---------------------------------------------------------#

yolov3:
  # darknet53 backbone
  backbone: &bb
    # [from, number, module, args]
    - [-1, 1, Conv, [32, 3, 1]]  # 0
    - [-1, 1, Conv, [64, 3, 2]]  # 1-P1/2
    - [-1, 1, Bottleneck, [64]]
    - [-1, 1, Conv, [128, 3, 2]]  # 3-P2/4
    - [-1, 2, Bottleneck, [128]]
    - [-1, 1, Conv, [256, 3, 2]]  # 5-P3/8
    - [-1, 8, Bottleneck, [256]]
    - [-1, 1, Conv, [512, 3, 2]]  # 7-P4/16
    - [-1, 8, Bottleneck, [512]]
    - [-1, 1, Conv, [1024, 3, 2]]  # 9-P5/32
    - [-1, 4, Bottleneck, [1024]]  # 10

  # YOLOv3 head
  neck:
    P5: &P5
      - [-1, 1, Bottleneck, [1024, False]]
      - [-1, 1, Conv, [512, 1, 1]]
      - [-1, 1, Conv, [1024, 3, 1]]
      - [-1, 1, Conv, [512, 1, 1]]
      - [-1, 1, Conv, [1024, 3, 1]]  # 15 (P5/32-large)
    P4: &P4
      - [-2, 1, Conv, [256, 1, 1]]
      - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
      - [[-1, 8], 1, Concat, [1]]  # cat backbone P4
      - [-1, 1, Bottleneck, [512, False]]
      - [-1, 1, Bottleneck, [512, False]]
      - [-1, 1, Conv, [256, 1, 1]]
      - [-1, 1, Conv, [512, 3, 1]]  # 22 (P4/16-medium)
    P3: &P3
      - [-2, 1, Conv, [128, 1, 1]]
      - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
      - [[-1, 6], 1, Concat, [1]]  # cat backbone P3
      - [-1, 1, Bottleneck, [256, False]]
      - [-1, 2, Bottleneck, [256, False]]  # 27 (P3/8-small)

  head: &head [[27, 22, 15], 1, Detect, [*nc]]  # Detect(P3, P4, P5)

#---------------------------------------------------------#

yolov3-spp:
  # darknet53 backbone
  backbone: *bb
  neck: 
    P5:
      - [-1, 1, Bottleneck, [1024, False]]
      - [-1, 1, SPP, [512, [5, 9, 13]]]
      - [-1, 1, Conv, [1024, 3, 1]]
      - [-1, 1, Conv, [512, 1, 1]]
      - [-1, 1, Conv, [1024, 3, 1]]  # 15 (P5/32-large)
    P4: *P4
    P3: *P3
  head: *head

#---------------------------------------------------------#

yolov3-tiny:
  # YOLOv3-tiny backbone
  backbone:
    # [from, number, module, args]
    - [-1, 1, Conv, [16, 3, 1]]  # 0
    - [-1, 1, nn.MaxPool2d, [2, 2, 0]]  # 1-P1/2
    - [-1, 1, Conv, [32, 3, 1]]
    - [-1, 1, nn.MaxPool2d, [2, 2, 0]]  # 3-P2/4
    - [-1, 1, Conv, [64, 3, 1]]
    - [-1, 1, nn.MaxPool2d, [2, 2, 0]]  # 5-P3/8
    - [-1, 1, Conv, [128, 3, 1]]
    - [-1, 1, nn.MaxPool2d, [2, 2, 0]]  # 7-P4/16
    - [-1, 1, Conv, [256, 3, 1]]
    - [-1, 1, nn.MaxPool2d, [2, 2, 0]]  # 9-P5/32
    - [-1, 1, Conv, [512, 3, 1]]
    - [-1, 1, nn.ZeroPad2d, [[0, 1, 0, 1]]]  # 11
    - [-1, 1, nn.MaxPool2d, [2, 1, 0]]  # 12

  # YOLOv3-tiny head
  neck:
    P5:
    - [-1, 1, Conv, [1024, 3, 1]]
    - [-1, 1, Conv, [256, 1, 1]]
    - [-1, 1, Conv, [512, 3, 1]]  # 15 (P5/32-large)
    P4:
    - [-2, 1, Conv, [128, 1, 1]]
    - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
    - [[-1, 8], 1, Concat, [1]]  # cat backbone P4
    - [-1, 1, Conv, [256, 3, 1]]  # 19 (P4/16-medium)

  head: [[19, 15], 1, Detect, [*nc]]  # Detect(P4, P5)

#---------------------------------------------------------#

mappings:
  yolov3: [backbone, [P5, P4, P3], head]
  yolov3-spp: [backbone, [P5, P4, P3], head]
  yolov3-tiny: [backbone, [P5, P4], head]